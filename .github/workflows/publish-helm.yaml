name: Build & Publish Helm

on:
  release:
    types: [published]
  workflow_dispatch: {}

env:
  CHART_NAME: scroll-proving-sindri

jobs:
  lint_chart:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Lint Chart
        run: helm lint charts/scroll-proving-sindri

  build_publish:
    name: Build & Publish Helm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Branch Check
        if: ${{ github.event_name == 'release' && github.event.release.prerelease == false }}
        run: |
          if [[ "$GITHUB_REF_PROTECTED" == 'false' ]]; then
            echo "Releases can only be created from a protected branch"
            exit 1
          fi

      - name: Login to GitHub Container Registry
        env:
          USERNAME: github-actions
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          helm registry login https://ghcr.io -u $USERNAME -p $PASSWORD

      - name: Release Version
        if: ${{ github.event_name == 'release' }}
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          IS_PRERELEASE: ${{ github.event.release.prerelease }}
        run: |
          if [[ "${IS_PRERELEASE}" == "true" ]]; then
            semver_pat='^v([0-9]+)\.([0-9]+)\.([0-9]+)-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$'
          else
            semver_pat='^v([0-9]+)\.([0-9]+)\.([0-9]+)$'
          fi

          if [[ ! $RELEASE_TAG =~ $semver_pat ]]; then
            echo "Invalid version: $RELEASE_TAG"
            exit 1
          fi

          release_version=${RELEASE_TAG#v}
          echo "RELEASE_VERESION=${release_version}" >> $GITHUB_ENV
          echo $release_version

      - name: Test Release Version
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          COMMIT_SHA: ${{ github.sha }}
        run: |
          release_version="v0.0.0-${COMMIT_SHA:0:7}"
          echo "RELEASE_VERESION=${release_version}" >> $GITHUB_ENV
          echo $release_version

      - name: Chart Info
        id: chart-info
        run: |
          echo "Artifact Name: $CHART_NAME-$RELEASE_VERSION.tgz" >> $GITHUB_STEP_SUMMARY

      # - name: Package & Push Chart
      #   working-directory: charts
      #   env:
      #     ARTIFACT_NAME: ${{ steps.chart-info.outputs.artifact_name }}
      #     REGISTRY_NAME: ${{ steps.chart-info.outputs.registry_name }}
      #   run: |
      #     helm dependency update sindri-scroll
      #     helm package sindri-scroll --destination .
      #     helm push $ARTIFACT_NAME oci://$REGISTRY_NAME

      #     echo "Chart pushed: $ARTIFACT_NAME" >> $GITHUB_STEP_SUMMARY
